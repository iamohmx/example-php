<!-- login.php -->
<?php 

// 1. การเชื่อมต่อกับฐานข้อมูล
include("connectdb.php");  // ดึงไฟล์ `connectdb.php` เข้ามาเพื่อใช้การเชื่อมต่อกับฐานข้อมูล โดยในไฟล์นี้น่าจะมีการกำหนดตัวแปร `$conn` สำหรับการเชื่อมต่อ MySQL

// 2. รับค่าชื่อผู้ใช้และรหัสผ่านจากคำขอ (request)
$us = isset($_REQUEST['us']) ? trim($_REQUEST['us']) : "";  // ตรวจสอบว่ามีค่าชื่อผู้ใช้ถูกส่งมาหรือไม่ ถ้ามีให้ใช้ค่าจากคำขอ (`$_REQUEST['us']`) และตัดช่องว่างข้างหน้าและข้างหลังออก (ด้วย `trim()`), ถ้าไม่มีจะให้ค่าเป็นค่าว่าง
$pw = isset($_REQUEST['pw']) ? trim($_REQUEST['pw']) : "";  // ทำเช่นเดียวกันกับรหัสผ่าน

// 3. การเข้ารหัสรหัสผ่าน
$pw = md5($pw);  // ใช้ฟังก์ชัน `md5()` เพื่อเข้ารหัสรหัสผ่านที่ผู้ใช้กรอกมา โดย `md5` เป็นวิธีการเข้ารหัสแบบแฮชที่นิยมใช้ในการเก็บรหัสผ่านในฐานข้อมูล

// 4. เขียน SQL เพื่อค้นหาผู้ใช้ในฐานข้อมูล
$sql="SELECT username, password, role FROM users WHERE (username='$us') AND (password='$pw') AND (role = 'user') ";  
    // สร้างคำสั่ง SQL สำหรับตรวจสอบว่าในฐานข้อมูลมีผู้ใช้ที่มีชื่อผู้ใช้ (`username`) และรหัสผ่าน (`password`) ตรงกับที่ผู้ใช้กรอกหรือไม่
    // รวมถึงตรวจสอบว่าผู้ใช้นั้นมีบทบาท (`role`) เป็น 'user' (อาจใช้ในการแยกระดับผู้ใช้ เช่น ผู้ดูแลระบบหรือผู้ใช้ทั่วไป)

$query=$conn->query($sql);  // ทำการส่งคำสั่ง SQL เพื่อประมวลผลกับฐานข้อมูล โดยใช้การเชื่อมต่อจาก `$conn`

// 5. ตรวจสอบจำนวนผลลัพธ์ที่ได้
$rs_number=mysqli_num_rows($query);  // ใช้ฟังก์ชัน `mysqli_num_rows()` เพื่อนับจำนวนแถวที่ได้จากผลลัพธ์ของการสืบค้น (query) ถ้าผลลัพธ์มี 1 แถวขึ้นไป แสดงว่ามีผู้ใช้ที่ตรงกับข้อมูลที่กรอก

// 6. การตอบกลับผลลัพธ์ในรูปแบบ JSON
if($rs_number>0){  
    echo '{"login":"OK"}';  // ถ้าจำนวนแถวที่ได้มากกว่า 0 แสดงว่าชื่อผู้ใช้และรหัสผ่านถูกต้อง จะตอบกลับข้อความ JSON ที่บอกว่า "login":"OK"
}else{
    echo '{"login":"NO"}';  // ถ้าจำนวนแถวเท่ากับ 0 แสดงว่าข้อมูลไม่ถูกต้อง จะตอบกลับข้อความ JSON ที่บอกว่า "login":"NO"
}
?>
